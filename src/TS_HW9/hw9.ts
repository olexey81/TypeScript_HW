// Вам потрібно створити умовний тип, що служить для встановлення типу, що повертається з функції. Як параметр типу повинен обов'язково виступати функціональний тип.

type FunctionReturnType<T> = T extends (...args: any[]) => infer U ? U : never;

// Вам потрібно створити умовний тип, який приймає функціональний тип з одним параметром (або задовільним) та повертає кортеж,
//де перше значення - це тип, що функція повертає, а другий - тип її параметру

type TupleType<T> = T extends (arg?: infer U) => infer V ? [V, U] : never;
